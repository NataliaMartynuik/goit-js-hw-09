{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MA5BMQ,SAASC,cAAc,SAE/BC,iBAAiB,SAEtB,SAAuBC,GAErB,GADAA,EAAMC,iBACwB,WAA1BD,EAAME,OAAOC,SACf,OAEF,IAEwBC,EAAnBJ,EAAMK,cADTC,SAAYjB,EAAKe,EAALf,MAAOkB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAEvBC,EAAeC,OAAOrB,EAAMsB,OAC1BC,EAAcF,OAAOH,EAAKI,OAC1BE,EAAgBH,OAAOF,EAAOG,QAmBtC,SAAyBG,EAAYP,EAAMC,GACzC,IAAK,IAAIO,EAAI,EAAGA,GAAKP,EAAQO,GAAK,EAChC5B,EAAe4B,EAAGD,GACfE,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,UAEvEiC,OAAM,SAAAL,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,EAAAjC,GAASkC,OAAOI,QAAQ,sBAAqCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,UAEvEyB,GAAcP,EA3BhBiB,CAAgBf,EAAcG,EAAaC,M","sources":["src/js/03-promises.js"],"sourcesContent":["  \nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('click', onClickSubmit);\n\nfunction onClickSubmit(event) {\n  event.preventDefault();\n  if (event.target.nodeName !== \"BUTTON\") {\n    return;\n  }\n  const {\n    elements: { delay, step, amount }\n   } = event.currentTarget;\n  let currentDelay = Number(delay.value);\n  const currentStep = Number(step.value);\n  const currentAmount = Number(amount.value);\n  generatePromise(currentDelay, currentStep, currentAmount);\n      \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n  return promise;\n}\n\nfunction generatePromise(firstDelay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise( i, firstDelay )\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    firstDelay += step;\n     \n  }\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","target","nodeName","_elements","currentTarget","elements","step","amount","currentDelay","Number","value","currentStep","currentAmount","firstDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$generatePromise"],"version":3,"file":"03-promises.60832a6e.js.map"}